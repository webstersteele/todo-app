{
  "_args": [
    [
      {
        "raw": "moongoose",
        "scope": null,
        "escapedName": "moongoose",
        "name": "moongoose",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\todo-app"
    ]
  ],
  "_from": "moongoose@latest",
  "_id": "moongoose@0.0.5",
  "_inCache": true,
  "_location": "/moongoose",
  "_nodeVersion": "5.12.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/moongoose-0.0.5.tgz_1471380109330_0.7808935246430337"
  },
  "_npmUser": {
    "name": "zjonsson",
    "email": "ziggy.jonsson.nyc@gmail.com"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "moongoose",
    "scope": null,
    "escapedName": "moongoose",
    "name": "moongoose",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/moongoose/-/moongoose-0.0.5.tgz",
  "_shasum": "85c4ad2a82bbf8b8cf830a767827899ee36857b3",
  "_shrinkwrap": null,
  "_spec": "moongoose",
  "_where": "C:\\todo-app",
  "author": {
    "name": "Ziggy Jonsson https://github.com/zjonsson"
  },
  "bugs": {
    "url": "https://github.com/ZJONSSON/moongoose/issues"
  },
  "dependencies": {
    "ajv": "^4.1.1",
    "bluebird": "^3.4.0",
    "mongodb": "^2.2.6",
    "streamz": "^1.5.2"
  },
  "description": "![moongoose](https://i.kinja-img.com/gawker-media/image/upload/s--wbCHfA3R--/c_fit,fl_progressive,q_80,w_636/17hnwnvcypnk6jpg.jpg)",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "85c4ad2a82bbf8b8cf830a767827899ee36857b3",
    "tarball": "https://registry.npmjs.org/moongoose/-/moongoose-0.0.5.tgz"
  },
  "gitHead": "ac14e79da020f562fe006f2bccaa1c93ffc5b465",
  "homepage": "https://github.com/ZJONSSON/moongoose#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "zjonsson",
      "email": "ziggy.jonsson.nyc@gmail.com"
    }
  ],
  "name": "moongoose",
  "optionalDependencies": {},
  "readme": "![moongoose](https://i.kinja-img.com/gawker-media/image/upload/s--wbCHfA3R--/c_fit,fl_progressive,q_80,w_636/17hnwnvcypnk6jpg.jpg)\n\nQ: Why do people use mongoose?\n\nHere are some of the benefits:\n* You can execute commands right away without having to wait for `mongo.connect()`\n* You get schema validation\n* You can create synthetic joins via populate\n\nHowever, there are some potential downsides:\n* Mongoose is global object - causing potential conflicts\n* Mongoose can be very slow with all the getters, setters and whatnot\n* the `lean()` options ends up being slower than native\n* It can be difficult to understand what is going on behind the scenes\n* The schema is non-standard\n\nMoongoose to the rescue\n\n* Just over 100 LOC - simple wrapper around native\n* No need to wait for connection before executing commands\n* Efficient `populate` for streaming and findOnes\n* Validation with JSON schema\n* Acts global but can be cloned for ringfencing different instances\n\n### Examples\n\n#### Example: fetching data\n\n```js\nvar moongoose = require('moongoose');\n\nmoongoose.connect('mongodb://localhost:27017/test');\n\n// Find one record and populate\nmoongoose.collection('test')\n  .findOne({})\n  .populate('org_id','orgs')\n  .then(console.log);\n\n// Find all record, populate and stream\nmoongoose.collection('test')\n  .find()\n  .populate('org_id','orgs')\n  .stream()\n  .pipe(...);\n\n// Find all records, poopulate and capture into array\nmoongoose.collection('test')\n  .find()\n  .populate('org_id','orgs')\n  .toArray()\n  .then(console.log)\n```\n\n#### Example: save a record with validation\n\n```js\nvar test = moongoose.collection('test',{\n  schema: {\n    additionalProperties: false,\n    properties: {\n      answer: {type:'boolean'},\n      fail: {type:'boolean'}\n    }\n  },\n  validate : function(data) {\n    if (data.fail)\n      throw 'Failed custom validation';\n  }\n});\n\n// This successfully save the record - junk is removed in validation\ntest.save({\n  answer: true,\n  junk: 'this gets removed'\n})\n.then(d => console.log(d.ops[0]),console.log);\n\n// This fails validation and is not saved\ntest.save({\n  answer: 'not a boolean'\n})\n.then(d => console.log(d.ops[0]),console.log);\n\n// This passes json-schema validation but fails custom validation\ntest.save({\n  answer: true,\n  fail: true\n})\n.then(d => console.log(d.ops[0]),console.log);\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/ZJONSSON/moongoose.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.5"
}
